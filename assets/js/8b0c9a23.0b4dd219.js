"use strict";(self.webpackChunkstacks_docs=self.webpackChunkstacks_docs||[]).push([[2219],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),i=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=i(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=i(n),d=a,k=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(k,s(s({ref:t},c),{},{components:n})):r.createElement(k,s({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,s[1]=p;for(var i=2;i<o;i++)s[i]=n[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1880:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>p,contentTitle:()=>l,metadata:()=>i,toc:()=>c,default:()=>m});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],p={id:"breakpoints",title:"Breakpoints"},l=void 0,i={unversionedId:"getting-started/breakpoints",id:"getting-started/breakpoints",title:"Breakpoints",description:"Stacks supports the responsive props format which allows you to specify an array of values for different screen sizes. Use responsive props to customize the spacing, number of columns, or alignments per screen size.",source:"@site/docs/getting-started/breakpoints.md",sourceDirName:"getting-started",slug:"/getting-started/breakpoints",permalink:"/stacks/docs/getting-started/breakpoints",editUrl:"https://github.com/mobily/stacks/edit/master/docs/docs/getting-started/breakpoints.md",tags:[],version:"current",frontMatter:{id:"breakpoints",title:"Breakpoints"},sidebar:"sidebar",previous:{title:"Usage",permalink:"/stacks/docs/getting-started/usage"},next:{title:"Changelog",permalink:"/stacks/docs/changelog"}},c=[{value:"Provider",id:"provider",children:[],level:3},{value:"Examples",id:"examples",children:[],level:3}],u={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Stacks")," supports the ",(0,o.kt)("inlineCode",{parentName:"p"},"responsive props")," format which allows you to specify an array of values for different screen sizes. Use ",(0,o.kt)("inlineCode",{parentName:"p"},"responsive props")," to customize the spacing, number of columns, or alignments per screen size."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"type ResponsiveProp<T> = T | readonly T[] // \u2b05\ufe0f typescript\n\ntype responsiveProp<'a> = array<'a> // \u2b05\ufe0f rescript\n")),(0,o.kt)("p",null,"You can define a new breakpoint with a tuple, the first value is the name of the breakpoint, and the other is a minimum breakpoint width."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"type Breakpoint = [string, number] // \u2b05\ufe0f typescript\n\ntype breakpoint = (string, number) // \u2b05\ufe0f rescript\n")),(0,o.kt)("h3",{id:"provider"},"Provider"),(0,o.kt)("p",null,"You can define as many breakpoints as you need in the provider."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// \u2b07\ufe0f typescript\nimport { StacksProvider } from '@mobily/stacks'\n\nconst App = () => {\n  return (\n    <StacksProvider spacing={4} breakpoints={[['mobile', 0], ['tablet', 768], ['desktop', 992]]}>\n      \u2026\n    </StacksProvider>\n  )\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'// \u2b07\ufe0f rescript\nopen Stacks\n\n@react.component\nlet make = () =>\n  <StacksProvider spacing=4. breakpoints={[("mobile", 0.), ("tablet", 768.), ("desktop", 992.)]}>\n    \u2026\n  </StacksProvider>\n')),(0,o.kt)("h3",{id:"examples"},"Examples"),(0,o.kt)("p",null,"If you want small spacing on mobile but medium spacing from tablet upwards."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// \u2b07\ufe0f typescript\n<Stack space={[1, 4]}>\n  \u2026\n</Stack>\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// \u2b07\ufe0f rescript\n<Stack space={[1., 4.]}>\n  \u2026\n</Stack>\n")),(0,o.kt)("p",null,"If you want top alignment on mobile and center on tablet upwards."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// \u2b07\ufe0f typescript\n<Columns space={1} alignY={['top', 'center']}>\n  <Column>\n    \u2026\n  </Column>\n  <Column>\n    \u2026\n  </Column>\n</Columns>\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// \u2b07\ufe0f rescript\n<Columns space=[1.] alignY=[#top, #center]>\n  <Column>\n    \u2026\n  </Column>\n  <Column>\n    \u2026\n  </Column>\n</Columns>\n")),(0,o.kt)("p",null,"If you want to stack columns vertically on smaller screens, you can provide the ",(0,o.kt)("inlineCode",{parentName:"p"},"collapseBelow")," prop."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'// \u2b07\ufe0f typescript\n<Columns space={1} collapseBelow="tablet">\n  <Column>\n    \u2026\n  </Column>\n  <Column>\n    \u2026\n  </Column>\n</Columns>\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// \u2b07\ufe0f rescript\n<Columns space=[1.] collapseBelow=#tablet>\n  <Column>\n    \u2026\n  </Column>\n  <Column>\n    \u2026\n  </Column>\n</Columns>\n")))}m.isMDXComponent=!0}}]);