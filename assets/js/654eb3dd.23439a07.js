"use strict";(self.webpackChunkstacks_docs=self.webpackChunkstacks_docs||[]).push([[6721],{9936:e=>{e.exports=JSON.parse('{"pluginId":"api","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"sidebar":[{"type":"category","label":"Components","collapsed":false,"items":[{"type":"link","label":"Bleed","href":"/stacks/api/components/bleed","docId":"components/bleed"},{"type":"link","label":"Box","href":"/stacks/api/components/box","docId":"components/box"},{"type":"link","label":"Columns & Column","href":"/stacks/api/components/columns","docId":"components/columns"},{"type":"link","label":"FillView","href":"/stacks/api/components/fill-view","docId":"components/fill-view"},{"type":"link","label":"Hidden","href":"/stacks/api/components/hidden","docId":"components/hidden"},{"type":"link","label":"Inline","href":"/stacks/api/components/inline","docId":"components/inline"},{"type":"link","label":"Inset","href":"/stacks/api/components/inset","docId":"components/inset"},{"type":"link","label":"Rows & Row","href":"/stacks/api/components/rows","docId":"components/rows"},{"type":"link","label":"Stack","href":"/stacks/api/components/stack","docId":"components/stack"},{"type":"link","label":"Tiles","href":"/stacks/api/components/tiles","docId":"components/tiles"}],"collapsible":true},{"type":"category","label":"Hooks","collapsed":false,"items":[{"type":"link","label":"useCurrentBreakpoint","href":"/stacks/api/hooks/use-current-breakpoint","docId":"hooks/use-current-breakpoint"},{"type":"link","label":"useDebugStyle","href":"/stacks/api/hooks/use-debug-style","docId":"hooks/use-debug-style"},{"type":"link","label":"useResponsiveProp","href":"/stacks/api/hooks/use-responsive-prop","docId":"hooks/use-responsive-prop"},{"type":"link","label":"useSpacing","href":"/stacks/api/hooks/use-spacing","docId":"hooks/use-spacing"},{"type":"link","label":"useSpacingHelpers","href":"/stacks/api/hooks/use-spacing-helpers","docId":"hooks/use-spacing-helpers"},{"type":"link","label":"useStacks","href":"/stacks/api/hooks/use-stacks","docId":"hooks/use-stacks"},{"type":"link","label":"useWindowDimensions","href":"/stacks/api/hooks/use-window-dimensions","docId":"hooks/use-window-dimensions"}],"collapsible":true},{"type":"category","label":"Other","collapsed":false,"items":[{"type":"link","label":"Grid","href":"/stacks/api/other/grid","docId":"other/grid"},{"type":"link","label":"StacksProvider","href":"/stacks/api/other/stacks-provider","docId":"other/stacks-provider"}],"collapsible":true}]},"docs":{"components/bleed":{"id":"components/bleed","title":"Bleed","description":"Bleed renders a container with negative margins allowing content to \\"bleed\\") into the surrounding layout.","sidebar":"sidebar"},"components/box":{"id":"components/box","title":"Box","description":"Box is the low-level layout component, it renders an individual View element with quick access to the standard padding and margin scales, as well as other common layout properties.","sidebar":"sidebar"},"components/columns":{"id":"components/columns","title":"Columns & Column","description":"Columns renders children horizontally in equal-width columns by default, with consistent spacing between them.","sidebar":"sidebar"},"components/fill-view":{"id":"components/fill-view","title":"FillView","description":"FillView covers a common pattern for creating overlays with position absolute and zero positioning.","sidebar":"sidebar"},"components/hidden":{"id":"components/hidden","title":"Hidden","description":"Hidden takes below and above props in which you can define when to render components placed within it (based on the current breakpoint).","sidebar":"sidebar"},"components/inline":{"id":"components/inline","title":"Inline","description":"Inline renders children horizontally, wrapping to multiple lines if needed, with equal spacing between items.","sidebar":"sidebar"},"components/inset":{"id":"components/inset","title":"Inset","description":"Inset renders a container with custom padding.","sidebar":"sidebar"},"components/rows":{"id":"components/rows","title":"Rows & Row","description":"Rows renders children vertically in equal-height rows by default, with consistent spacing between them.","sidebar":"sidebar"},"components/stack":{"id":"components/stack","title":"Stack","description":"Stack distributes children vertically with equal spacing between them, plus an optional separator element.","sidebar":"sidebar"},"components/tiles":{"id":"components/tiles","title":"Tiles","description":"Tiles renders a grid of components with equal spacing between them.","sidebar":"sidebar"},"hooks/use-current-breakpoint":{"id":"hooks/use-current-breakpoint","title":"useCurrentBreakpoint","description":"useCurrentBreakpoint returns the current breakpoint value.","sidebar":"sidebar"},"hooks/use-debug-style":{"id":"hooks/use-debug-style","title":"useDebugStyle","description":"useDebugStyle generates a style object with a random backgroundColor value.","sidebar":"sidebar"},"hooks/use-responsive-prop":{"id":"hooks/use-responsive-prop","title":"useResponsiveProp","description":"useResponsiveProp returns a function that takes the responsive props format as an argument. Useful if you want to resolve responsive props in your components.","sidebar":"sidebar"},"hooks/use-spacing":{"id":"hooks/use-spacing","title":"useSpacing","description":"useSpacing takes a numeric value, that is multiplied by the spacing value defined in StacksProvider.","sidebar":"sidebar"},"hooks/use-spacing-helpers":{"id":"hooks/use-spacing-helpers","title":"useSpacingHelpers","description":"useSpacingHelpers returns two functions: multiply and divide allowing to either multiply or divide a value by the spacing value passed to StacksProvider.","sidebar":"sidebar"},"hooks/use-stacks":{"id":"hooks/use-stacks","title":"useStacks","description":"useStacks returns the Stacks context object.","sidebar":"sidebar"},"hooks/use-window-dimensions":{"id":"hooks/use-window-dimensions","title":"useWindowDimensions","description":"useWindowDimensions automatically updates width and height values when screen size changes.","sidebar":"sidebar"},"other/grid":{"id":"other/grid","title":"Grid","description":"Grid renders a design system grid. Use it only once, at the top of your react tree.","sidebar":"sidebar"},"other/stacks-provider":{"id":"other/stacks-provider","title":"StacksProvider","description":"Use StacksProvider at the top of your react tree to overwrite default options.","sidebar":"sidebar"}}}')}}]);