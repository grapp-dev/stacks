"use strict";(self.webpackChunkstacks_docs=self.webpackChunkstacks_docs||[]).push([[1],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>y});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),l=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=l(r),y=o,g=d["".concat(u,".").concat(y)]||d[y]||p[y]||a;return r?n.createElement(g,s(s({ref:t},c),{},{components:r})):n.createElement(g,s({ref:t},c))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7001:(e,t,r)=>{r.r(t),r.d(t,{frontMatter:()=>i,contentTitle:()=>u,metadata:()=>l,toc:()=>c,default:()=>d});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),s=["components"],i={id:"use-debug-style",title:"useDebugStyle"},u=void 0,l={unversionedId:"hooks/use-debug-style",id:"hooks/use-debug-style",title:"useDebugStyle",description:"useDebugStyle generates a style object with a random backgroundColor value.",source:"@site/api/hooks/use-debug-style.mdx",sourceDirName:"hooks",slug:"/hooks/use-debug-style",permalink:"/stacks/api/hooks/use-debug-style",tags:[],version:"current",frontMatter:{id:"use-debug-style",title:"useDebugStyle"},sidebar:"sidebar",previous:{title:"useCurrentBreakpoint",permalink:"/stacks/api/hooks/use-current-breakpoint"},next:{title:"useResponsiveProp",permalink:"/stacks/api/hooks/use-responsive-prop"}},c=[{value:"TypeScript",id:"typescript",children:[],level:3},{value:"ReScript",id:"rescript",children:[],level:3},{value:"Basic usage",id:"basic-usage",children:[],level:3}],p={toc:c};function d(e){var t=e.components,r=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"useDebugStyle")," generates a style object with a random ",(0,a.kt)("inlineCode",{parentName:"p"},"backgroundColor")," value."),(0,a.kt)("h3",{id:"typescript"},"TypeScript"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"const useDebugStyle: () => ReactNative.StyleProp<ReactNative.ViewStyle> | undefined | null\n")),(0,a.kt)("h3",{id:"rescript"},"ReScript"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"let useDebugStyle: unit => option<ReactNative.Style.t>\n")),(0,a.kt)("h3",{id:"basic-usage"},"Basic usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live showCode",live:!0,showCode:!0},'const DebugText = () => {\n  const debugStyle = useDebugStyle()\n\n  return (\n    <Box padding={4} style={debugStyle}>\n      <Typography variant="body">Debug</Typography>\n    </Box>\n  )\n}\n\nconst App = () => {\n  return (\n    <StacksProvider debug={true}>\n      <DebugText />\n    </StacksProvider>\n  )\n}\n\nrender(<App />)\n')))}d.isMDXComponent=!0}}]);